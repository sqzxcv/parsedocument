<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nina.webCollector.mapper.DocumentMapper" >
  <resultMap id="BaseResultMap" type="com.nina.webCollector.model.Document" >
    <id column="doc_id" property="docId" jdbcType="INTEGER" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="content_type" property="contentType" jdbcType="INTEGER" />
    <result column="news_time" property="newsTime" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.nina.webCollector.model.DocumentWithBLOBs" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
    <result column="contentHtml" property="contenthtml" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    doc_id, url, content_type, news_time, title
  </sql>
  <sql id="Blob_Column_List" >
    content, contentHtml
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.nina.webCollector.model.DocumentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from document
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.nina.webCollector.model.DocumentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from document
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from document
    where doc_id = #{docId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from document
    where doc_id = #{docId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.nina.webCollector.model.DocumentExample" >
    delete from document
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.nina.webCollector.model.DocumentWithBLOBs" >
    insert into document (doc_id, url, content_type, 
      news_time, title, content, 
      contentHtml)
    values (#{docId,jdbcType=INTEGER}, #{url,jdbcType=VARCHAR}, #{contentType,jdbcType=INTEGER}, 
      #{newsTime,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR}, 
      #{contenthtml,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.nina.webCollector.model.DocumentWithBLOBs" >
    insert into document
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="docId != null" >
        doc_id,
      </if>
      <if test="url != null" >
        url,
      </if>
      <if test="contentType != null" >
        content_type,
      </if>
      <if test="newsTime != null" >
        news_time,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="contenthtml != null" >
        contentHtml,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="docId != null" >
        #{docId,jdbcType=INTEGER},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="contentType != null" >
        #{contentType,jdbcType=INTEGER},
      </if>
      <if test="newsTime != null" >
        #{newsTime,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="contenthtml != null" >
        #{contenthtml,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.nina.webCollector.model.DocumentExample" resultType="java.lang.Integer" >
    select count(*) from document
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update document
    <set >
      <if test="record.docId != null" >
        doc_id = #{record.docId,jdbcType=INTEGER},
      </if>
      <if test="record.url != null" >
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.contentType != null" >
        content_type = #{record.contentType,jdbcType=INTEGER},
      </if>
      <if test="record.newsTime != null" >
        news_time = #{record.newsTime,jdbcType=INTEGER},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.contenthtml != null" >
        contentHtml = #{record.contenthtml,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update document
    set doc_id = #{record.docId,jdbcType=INTEGER},
      url = #{record.url,jdbcType=VARCHAR},
      content_type = #{record.contentType,jdbcType=INTEGER},
      news_time = #{record.newsTime,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=LONGVARCHAR},
      contentHtml = #{record.contenthtml,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update document
    set doc_id = #{record.docId,jdbcType=INTEGER},
      url = #{record.url,jdbcType=VARCHAR},
      content_type = #{record.contentType,jdbcType=INTEGER},
      news_time = #{record.newsTime,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.nina.webCollector.model.DocumentWithBLOBs" >
    update document
    <set >
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="contentType != null" >
        content_type = #{contentType,jdbcType=INTEGER},
      </if>
      <if test="newsTime != null" >
        news_time = #{newsTime,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="contenthtml != null" >
        contentHtml = #{contenthtml,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where doc_id = #{docId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.nina.webCollector.model.DocumentWithBLOBs" >
    update document
    set url = #{url,jdbcType=VARCHAR},
      content_type = #{contentType,jdbcType=INTEGER},
      news_time = #{newsTime,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR},
      contentHtml = #{contenthtml,jdbcType=LONGVARCHAR}
    where doc_id = #{docId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nina.webCollector.model.Document" >
    update document
    set url = #{url,jdbcType=VARCHAR},
      content_type = #{contentType,jdbcType=INTEGER},
      news_time = #{newsTime,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR}
    where doc_id = #{docId,jdbcType=INTEGER}
  </update>
</mapper>